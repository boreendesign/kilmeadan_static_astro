import {
  require_react
} from "./chunk-RS2Q24XY.js";
import {
  __toESM
} from "./chunk-AUZ3RYOM.js";

// node_modules/@tinacms/sharedctx/dist/index.mjs
var import_react = __toESM(require_react(), 1);
var LOCALSTORAGEKEY = "tina.isEditing";
var isSSR = typeof window === "undefined";
var isEditing = () => {
  if (!isSSR) {
    const isEdit = window.localStorage && window.localStorage.getItem(LOCALSTORAGEKEY);
    return isEdit && isEdit === "true";
  }
  return false;
};
var setEditing = (isEditing2) => {
  if (!isSSR) {
    window.localStorage.setItem(LOCALSTORAGEKEY, isEditing2 ? "true" : "false");
  }
};
var EditContext = import_react.default.createContext({
  edit: isEditing(),
  setEdit: void 0,
  formsRegistering: false,
  setFormsRegistering: void 0
});
var TinaDataContext = import_react.default.createContext({
  state: {
    payload: {}
  },
  setRequest: () => {
  },
  isLoading: false,
  isDummyContainer: true
});
var EditProvider = ({
  children
}) => {
  const [edit, setEditState] = (0, import_react.useState)(
    // grabs the correct initial edit state from localstorage
    isEditing()
  );
  const [formsRegistering, setFormsRegistering] = (0, import_react.useState)(false);
  const setEdit = (edit2) => {
    setEditState(edit2);
    setEditing(edit2);
  };
  return import_react.default.createElement(
    EditContext.Provider,
    {
      value: { edit, setEdit, formsRegistering, setFormsRegistering }
    },
    children
  );
};
var useEditState = () => {
  const { edit, setEdit } = (0, import_react.useContext)(EditContext);
  if (!setEdit) {
    throw new Error(
      "Unable to find `TinaProvider`; did you forget to add the TinaCMS container to your app root?  See our setup docs: https://tina.io/docs/introduction/tina-init/#adding-tina"
    );
  }
  return { edit, setEdit };
};

export {
  isEditing,
  setEditing,
  EditContext,
  TinaDataContext,
  EditProvider,
  useEditState
};
//# sourceMappingURL=chunk-3XKLHVWO.js.map
