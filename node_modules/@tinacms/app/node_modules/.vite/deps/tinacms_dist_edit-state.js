import {
  EditProvider,
  TinaDataContext,
  isEditing,
  setEditing,
  useEditState
} from "./chunk-3XKLHVWO.js";
import {
  require_react
} from "./chunk-RS2Q24XY.js";
import {
  __toESM
} from "./chunk-AUZ3RYOM.js";

// node_modules/tinacms/dist/edit-state.mjs
var import_react = __toESM(require_react(), 1);
var useEditState2 = useEditState;
var TinaEditProvider = ({
  showEditButton,
  ...props
}) => {
  return import_react.default.createElement(EditProvider, null, showEditButton && import_react.default.createElement(ToggleButton, null), import_react.default.createElement(TinaEditProviderInner, { ...props }));
};
function useTina({
  query,
  variables,
  data
}) {
  import_react.default.useEffect(() => {
    console.warn(`
  "useTina" from 'tinacms/dist/edit-state' is now deprecated
  * Use "import { useTina } from 'tinacms/dist/react" instead.
  * See https://tina.io/blog/upgrading-to-iframe/ for full migration details
  `);
  }, []);
  const {
    setRequest,
    state,
    isDummyContainer,
    isLoading: contextLoading
  } = import_react.default.useContext(TinaDataContext);
  const [waitForContextRerender, setWaitForContextRerender] = (0, import_react.useState)(
    !isDummyContainer
  );
  const isLoading = contextLoading || waitForContextRerender;
  import_react.default.useEffect(() => {
    setRequest({ query, variables });
  }, [JSON.stringify(variables), query]);
  (0, import_react.useEffect)(() => {
    if (!isDummyContainer) {
      setTimeout(() => setWaitForContextRerender(false), 0);
    }
    return () => {
      setRequest(void 0);
    };
  }, [isDummyContainer]);
  return {
    data: isDummyContainer || isLoading ? data : state.payload,
    isLoading
  };
}
var ToggleButton = () => {
  const { edit } = useEditState2();
  const [isOnAdmin, setIsOnAdmin] = import_react.default.useState(false);
  import_react.default.useEffect(() => {
    var _a;
    if (window) {
      if ((_a = window.location) == null ? void 0 : _a.pathname.startsWith("/admin")) {
        setIsOnAdmin(true);
      }
    }
  }, [setIsOnAdmin]);
  return edit || isOnAdmin ? null : import_react.default.createElement(
    "div",
    {
      style: { position: "fixed", bottom: "56px", left: "0px", zIndex: 200 }
    },
    import_react.default.createElement(
      "a",
      {
        href: "/admin",
        style: {
          borderRadius: "0 50px 50px 0",
          fontSize: "16px",
          fontFamily: "Inter, 'Helvetica Neue', 'Arial Nova', Helvetica, Arial, sans-serif",
          fontWeight: "bold",
          textDecoration: "none",
          background: "rgb(34, 150, 254)",
          boxShadow: "0px 1px 3px rgb(0 0 0 / 10%), 0px 2px 6px rgb(0 0 0 / 20%)",
          color: "white",
          padding: "14px 20px",
          border: "none"
        }
      },
      "Edit with Tina"
    )
  );
};
var TinaEditProviderInner = ({ children, editMode }) => {
  const { edit } = useEditState2();
  const [isBrowser, setIsBrowser] = import_react.default.useState(false);
  import_react.default.useEffect(() => {
    setIsBrowser(true);
  }, []);
  if (edit && isBrowser) {
    return editMode;
  }
  return children;
};
export {
  TinaEditProvider,
  isEditing,
  setEditing,
  useEditState2 as useEditState,
  useTina
};
//# sourceMappingURL=tinacms_dist_edit-state.js.map
